/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as PostsIndexImport } from './routes/posts/index'
import { Route as MatrixWorkflowIndexImport } from './routes/matrix-workflow/index'
import { Route as PostsPostIdImport } from './routes/posts/$postId'
import { Route as MatrixWorkflowWorkflowIdImport } from './routes/matrix-workflow/$workflowId'
import { Route as aboutAboutImport } from './routes/(about)/about'
import { Route as aboutAboutWhatImport } from './routes/(about)/about.what'

// Create/Update Routes

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const PostsIndexRoute = PostsIndexImport.update({
  id: '/posts/',
  path: '/posts/',
  getParentRoute: () => rootRoute,
} as any)

const MatrixWorkflowIndexRoute = MatrixWorkflowIndexImport.update({
  id: '/matrix-workflow/',
  path: '/matrix-workflow/',
  getParentRoute: () => rootRoute,
} as any)

const PostsPostIdRoute = PostsPostIdImport.update({
  id: '/posts/$postId',
  path: '/posts/$postId',
  getParentRoute: () => rootRoute,
} as any)

const MatrixWorkflowWorkflowIdRoute = MatrixWorkflowWorkflowIdImport.update({
  id: '/matrix-workflow/$workflowId',
  path: '/matrix-workflow/$workflowId',
  getParentRoute: () => rootRoute,
} as any)

const aboutAboutRoute = aboutAboutImport.update({
  id: '/(about)/about',
  path: '/about',
  getParentRoute: () => rootRoute,
} as any)

const aboutAboutWhatRoute = aboutAboutWhatImport.update({
  id: '/what',
  path: '/what',
  getParentRoute: () => aboutAboutRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/(about)/about': {
      id: '/(about)/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof aboutAboutImport
      parentRoute: typeof rootRoute
    }
    '/matrix-workflow/$workflowId': {
      id: '/matrix-workflow/$workflowId'
      path: '/matrix-workflow/$workflowId'
      fullPath: '/matrix-workflow/$workflowId'
      preLoaderRoute: typeof MatrixWorkflowWorkflowIdImport
      parentRoute: typeof rootRoute
    }
    '/posts/$postId': {
      id: '/posts/$postId'
      path: '/posts/$postId'
      fullPath: '/posts/$postId'
      preLoaderRoute: typeof PostsPostIdImport
      parentRoute: typeof rootRoute
    }
    '/matrix-workflow/': {
      id: '/matrix-workflow/'
      path: '/matrix-workflow'
      fullPath: '/matrix-workflow'
      preLoaderRoute: typeof MatrixWorkflowIndexImport
      parentRoute: typeof rootRoute
    }
    '/posts/': {
      id: '/posts/'
      path: '/posts'
      fullPath: '/posts'
      preLoaderRoute: typeof PostsIndexImport
      parentRoute: typeof rootRoute
    }
    '/(about)/about/what': {
      id: '/(about)/about/what'
      path: '/what'
      fullPath: '/about/what'
      preLoaderRoute: typeof aboutAboutWhatImport
      parentRoute: typeof aboutAboutImport
    }
  }
}

// Create and export the route tree

interface aboutAboutRouteChildren {
  aboutAboutWhatRoute: typeof aboutAboutWhatRoute
}

const aboutAboutRouteChildren: aboutAboutRouteChildren = {
  aboutAboutWhatRoute: aboutAboutWhatRoute,
}

const aboutAboutRouteWithChildren = aboutAboutRoute._addFileChildren(
  aboutAboutRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof aboutAboutRouteWithChildren
  '/matrix-workflow/$workflowId': typeof MatrixWorkflowWorkflowIdRoute
  '/posts/$postId': typeof PostsPostIdRoute
  '/matrix-workflow': typeof MatrixWorkflowIndexRoute
  '/posts': typeof PostsIndexRoute
  '/about/what': typeof aboutAboutWhatRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof aboutAboutRouteWithChildren
  '/matrix-workflow/$workflowId': typeof MatrixWorkflowWorkflowIdRoute
  '/posts/$postId': typeof PostsPostIdRoute
  '/matrix-workflow': typeof MatrixWorkflowIndexRoute
  '/posts': typeof PostsIndexRoute
  '/about/what': typeof aboutAboutWhatRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/(about)/about': typeof aboutAboutRouteWithChildren
  '/matrix-workflow/$workflowId': typeof MatrixWorkflowWorkflowIdRoute
  '/posts/$postId': typeof PostsPostIdRoute
  '/matrix-workflow/': typeof MatrixWorkflowIndexRoute
  '/posts/': typeof PostsIndexRoute
  '/(about)/about/what': typeof aboutAboutWhatRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about'
    | '/matrix-workflow/$workflowId'
    | '/posts/$postId'
    | '/matrix-workflow'
    | '/posts'
    | '/about/what'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/about'
    | '/matrix-workflow/$workflowId'
    | '/posts/$postId'
    | '/matrix-workflow'
    | '/posts'
    | '/about/what'
  id:
    | '__root__'
    | '/'
    | '/(about)/about'
    | '/matrix-workflow/$workflowId'
    | '/posts/$postId'
    | '/matrix-workflow/'
    | '/posts/'
    | '/(about)/about/what'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  aboutAboutRoute: typeof aboutAboutRouteWithChildren
  MatrixWorkflowWorkflowIdRoute: typeof MatrixWorkflowWorkflowIdRoute
  PostsPostIdRoute: typeof PostsPostIdRoute
  MatrixWorkflowIndexRoute: typeof MatrixWorkflowIndexRoute
  PostsIndexRoute: typeof PostsIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  aboutAboutRoute: aboutAboutRouteWithChildren,
  MatrixWorkflowWorkflowIdRoute: MatrixWorkflowWorkflowIdRoute,
  PostsPostIdRoute: PostsPostIdRoute,
  MatrixWorkflowIndexRoute: MatrixWorkflowIndexRoute,
  PostsIndexRoute: PostsIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/(about)/about",
        "/matrix-workflow/$workflowId",
        "/posts/$postId",
        "/matrix-workflow/",
        "/posts/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/(about)/about": {
      "filePath": "(about)/about.tsx",
      "children": [
        "/(about)/about/what"
      ]
    },
    "/matrix-workflow/$workflowId": {
      "filePath": "matrix-workflow/$workflowId.tsx"
    },
    "/posts/$postId": {
      "filePath": "posts/$postId.tsx"
    },
    "/matrix-workflow/": {
      "filePath": "matrix-workflow/index.tsx"
    },
    "/posts/": {
      "filePath": "posts/index.tsx"
    },
    "/(about)/about/what": {
      "filePath": "(about)/about.what.tsx",
      "parent": "/(about)/about"
    }
  }
}
ROUTE_MANIFEST_END */
